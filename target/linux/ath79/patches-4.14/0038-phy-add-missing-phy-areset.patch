diff --git a/drivers/phy/phy-ar7200-usb.c b/drivers/phy/phy-ar7200-usb.c
index f91c70d..4d8159e 100644
--- a/drivers/phy/phy-ar7200-usb.c
+++ b/drivers/phy/phy-ar7200-usb.c
@@ -16,6 +16,7 @@
 struct ar7200_usb_phy {
 	struct reset_control	*rst_phy;
 	struct reset_control	*suspend_override;
+	struct reset_control	*arst_phy;
 	struct phy		*phy;
 	int			gpio;
 };
@@ -29,6 +30,8 @@ static int ar7200_usb_phy_power_on(struct phy *phy)
 		err = reset_control_deassert(priv->rst_phy);
 	if (!err && priv->suspend_override)
 		err = reset_control_assert(priv->suspend_override);
+	if (!err && priv->arst_phy)
+		err = reset_control_deassert(priv->arst_phy);
 	if (err && priv->rst_phy)
 		err = reset_control_assert(priv->rst_phy);
 
@@ -42,6 +45,8 @@ static int ar7200_usb_phy_power_off(struct phy *phy)
 
 	if (priv->suspend_override)
 		err = reset_control_deassert(priv->suspend_override);
+	if (priv->arst_phy)
+		err |= reset_control_assert(priv->arst_phy);
 	if (priv->rst_phy)
 		err |= reset_control_assert(priv->rst_phy);
 
@@ -78,6 +83,15 @@ static int ar7200_usb_phy_probe(struct platform_device *pdev)
 			return PTR_ERR(priv->suspend_override);
 	}
 
+	priv->arst_phy = devm_reset_control_get_optional(
+		&pdev->dev, "usb-phy-areset");
+	if (IS_ERR(priv->arst_phy)) {
+		if (PTR_ERR(priv->arst_phy) == -ENOENT)
+			priv->arst_phy = NULL;
+		else
+			return PTR_ERR(priv->arst_phy);
+	}
+
 	priv->phy = devm_phy_create(&pdev->dev, NULL, &ar7200_usb_phy_ops);
 	if (IS_ERR(priv->phy)) {
 		dev_err(&pdev->dev, "failed to create PHY\n");
