--- a/drivers/net/usb/qmi_wwan.c
+++ b/drivers/net/usb/qmi_wwan.c
@@ -1061,7 +1061,10 @@ static const struct usb_device_id produc
 	{QMI_MATCH_FF_FF_FF(0x2c7c, 0x0800)},	/* Quectel RM500Q-GL */
 
 	/* 3. Combined interface devices matching on interface number */
-	{QMI_FIXED_INTF(0x0408, 0xea42, 4)},	/* Yota / Megafon M100-1 */
+        {QMI_QUIRK_SET_DTR(0x1c9e, 0x9b3c, 4)}, /* longsung U9300W/C */
+        {QMI_QUIRK_SET_DTR(0x2020, 0x2040, 4)}, /* BroadMobi 817C */
+        {QMI_FIXED_INTF(0x1c9e, 0x9b05, 4)},    /*U8300 QMI Drivers */
+        {QMI_FIXED_INTF(0x0408, 0xea42, 4)},	/* Yota / Megafon M100-1 */
 	{QMI_FIXED_INTF(0x05c6, 0x6001, 3)},	/* 4G LTE usb-modem U901 */
 	{QMI_FIXED_INTF(0x05c6, 0x7000, 0)},
 	{QMI_FIXED_INTF(0x05c6, 0x7001, 1)},
--- a/drivers/usb/serial/option.c
+++ b/drivers/usb/serial/option.c
@@ -382,7 +382,16 @@ static void option_instat_callback(struc
  * Mobidata, etc sell under their own brand names.
  */
 #define LONGCHEER_VENDOR_ID			0x1c9e
-
+/*************Add for LongSung U9300 LTE modem*********/
+#define LONGSUNG_VENDOR_ID         0x1c9e
+#define LONGSUNG_U9300_PRODUCT_ID         0x9b3c
+
+/******************************************************/
+/*************Add for LongSung U8300 LTE modem*********/
+#define LONGSUNG_VENDOR_ID         0x1c9e
+#define LONGSUNG_U8300_PRODUCT_ID         0x9b05
+ 
+/******************************************************/
 /* 4G Systems products */
 /* This is the 4G XS Stick W14 a.k.a. Mobilcom Debitel Surf-Stick *
  * It seems to contain a Qualcomm QSC6240/6290 chipset            */
@@ -575,6 +584,13 @@ static void option_instat_callback(struc
 
 
 static const struct usb_device_id option_ids[] = {
+       /***************Add for LongSung U9300 LTE modem****************/
+	{ USB_DEVICE(LONGSUNG_VENDOR_ID, LONGSUNG_U9300_PRODUCT_ID) },
+	/***************************************************************/
+        /***************Add for LongSung U8300 LTE modem****************/
+	{ USB_DEVICE(LONGSUNG_VENDOR_ID, LONGSUNG_U8300_PRODUCT_ID) },
+	/***************************************************************/
+	{ USB_DEVICE( 0x2020, 0x2040 ) },
 	{ USB_DEVICE(OPTION_VENDOR_ID, OPTION_PRODUCT_COLT) },
 	{ USB_DEVICE(OPTION_VENDOR_ID, OPTION_PRODUCT_RICOLA) },
 	{ USB_DEVICE(OPTION_VENDOR_ID, OPTION_PRODUCT_RICOLA_LIGHT) },
@@ -2100,6 +2116,40 @@ static int option_probe(struct usb_seria
 	if (iface_desc->bInterfaceClass == USB_CLASS_MASS_STORAGE)
 		return -ENODEV;
 
+ if(serial->dev->descriptor.idVendor == 0x1c9e &&
+    serial->dev->descriptor.idProduct == 0x9b3c&&
+    serial->interface->cur_altsetting->desc.bInterfaceNumber == 0){
+     printk("GZZ Discover the 0th interface for 9300 ndis\n");
+    return -ENODEV;
+     }
+
+
+	/***************Add for LongSung U9300 LTE modem****************/
+	if (serial->dev->descriptor.idVendor == cpu_to_le16(LONGSUNG_VENDOR_ID) &&
+	    serial->dev->descriptor.idProduct ==cpu_to_le16(LONGSUNG_U9300_PRODUCT_ID) &&
+		serial->interface->cur_altsetting->desc.bInterfaceNumber == 4){
+		printk(KERN_INFO"Discover the 4th interface for U9300 NDIS\n");
+		return -ENODEV;
+		}
+	/***************************************************************/
+/***************Add for LongSung U8300 LTE modem****************/
+   if(serial->dev->descriptor.idVendor == LONGSUNG_VENDOR_ID &&
+    serial->dev->descriptor.idProduct == LONGSUNG_U8300_PRODUCT_ID&&
+    serial->interface->cur_altsetting->desc.bInterfaceNumber == 4){
+     printk("GZZ Discover the 0th interface for 8300 ndis\n");
+    return -ENODEV;
+     }
+/***************************************************************/
+
+/*************Add for BroadMobi BM817C**************************/
+if((serial->dev->descriptor.idVendor == 0x2020) &&
+   (serial->dev->descriptor.idProduct == 0x2040) &&
+   (serial->interface->cur_altsetting ->desc.bInterfaceNumber == 4)){
+    printk(KERN_INFO"BM817C Ethernet Adapter");
+	 return -ENODEV;
+   }
+/***************************************************************/
+
 	/*
 	 * Don't bind reserved interfaces (like network ones) which often have
 	 * the same class/subclass/protocol as the serial interfaces.  Look at
